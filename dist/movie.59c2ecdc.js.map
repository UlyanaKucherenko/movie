{"version":3,"sources":["js/http/index.js","js/movie.js"],"names":["BASE_URL","urls","posts","list","document","getElementById","input","textarea","form","addEventListener","e","preventDefault","formData","title","value","body","userId","fetch","method","JSON","stringify","headers","then","response","ok","text","Error","status","res","UIkit","notification","message","renderList","data","map","id","listItem","createElement","innerHTML","appendChild","getData","json","parsedRes","DATA"],"mappings":"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","file":"movie.59c2ecdc.js","sourceRoot":"..","sourcesContent":["\r\nconst BASE_URL = \"https://jsonplaceholder.typicode.com\";\r\n\r\nconst urls = {\r\n  posts: `${BASE_URL}/posts`,\r\n};\r\n\r\n\r\n\r\nexport { BASE_URL, urls};","import { urls } from \"./http\";\r\n\r\nconst list = document.getElementById(\"list\");\r\nconst input = document.getElementById(\"input\");\r\nconst textarea = document.getElementById(\"textarea\");\r\nconst form = document.getElementById(\"form\");\r\n\r\nform.addEventListener(\"submit\", async (e) => {\r\n  e.preventDefault();\r\n\r\n  try {\r\n    const formData = {\r\n      title: input.value,\r\n      body: textarea.value,\r\n      userId: 1,\r\n    };\r\n    // const formData = new FormData();\r\n    // formData.append('title', input.value);\r\n    // formData.append('body', textarea.value);\r\n    // formData.append('userId', 1);\r\n\r\n    const res = await fetch(urls.posts, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(formData),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    }).then((response) => {\r\n      if (response.ok) {\r\n        return response.text();\r\n      } else {\r\n        throw new Error(`Error code ${response.status}`);\r\n      }\r\n    });\r\n\r\n    input.value = \"\";\r\n    textarea.value = \"\";\r\n\r\n    UIkit.notification({\r\n      message: res,\r\n      status: \"success\",\r\n    });\r\n  } catch (error) {\r\n    UIkit.notification({ message: error, status: \"danger\" });\r\n  }\r\n});\r\n\r\nconst renderList = (data) => {\r\n  data.map(({ id, title, body: text }) => {\r\n    const listItem = document.createElement(\"li\");\r\n    listItem.innerHTML = `<h2>${title}</h2><span>${text}</span>`;\r\n    listItem.innerHTML += `<span> - ${id}</span>`;\r\n    list.appendChild(listItem);\r\n  });\r\n};\r\n\r\nconst getData = async () => {\r\n  try {\r\n    const res = await fetch(urls.posts);\r\n    const parsedRes = await res.json();\r\n    UIkit.notification({\r\n      message: \"Data loaded successfuly\",\r\n      status: \"success\",\r\n    });\r\n    return parsedRes;\r\n  } catch (error) {\r\n    UIkit.notification({ message: error, status: \"danger\" });\r\n  }\r\n};\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\r\n  const DATA = await getData();\r\n  renderList(DATA || []);\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { urls } from \"./http\";\r\n\r\n// const input = document.querySelector('.form-input');\r\n// let params = {};\r\n\r\n// function createCard(data) {\r\n//     //console.log(`data: ${data.Title}`);\r\n//     const element = document.createElement('div');\r\n//     data.forEach((item,i)=>{\r\n        \r\n//         element.innerHTML += `\r\n//             <p> ${i+1} - <b>Movie:</b> ${item.Title}  <b>Year:</b>${item.Year} </p>\r\n//         `;\r\n//         document.querySelector('.block-result').append(element);\r\n//     });\r\n\r\n// }\r\n\r\n// const getMovies = async (params) => {\r\n//     try {\r\n//       params.title = params.title || '';\r\n//       params.type = params.type || '';\r\n//       params.page = params.page || 1;\r\n//       const res = await fetch(`${urls.search}&s=${params.title}&type=${params.type}&page=${params.page}`);\r\n//       const parsedRes = await res.json();\r\n      \r\n//       return parsedRes;\r\n//     } catch (error) {\r\n//       UiKit.notify({ message: error, status: \"danger\" });\r\n//     }\r\n//   };\r\n\r\n\r\n// document.addEventListener(\"DOMContentLoaded\", async () => {\r\n\r\n//     const form = document.querySelector(\".form\");\r\n//     if (form && form.length) {\r\n//       form.addEventListener(\"submit\", async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//           params = {\r\n//             title: document.querySelector(\"[name='title']\").value,\r\n//             type: document.querySelector(\"[name='type']:checked\").value,\r\n//             page: 1,\r\n//           };\r\n         \r\n//           const data = await getMovies(params);\r\n//           console.log(data);\r\n          \r\n//           return;\r\n//         } catch (error) {\r\n//           console.log(error);\r\n//           UIkit.notify({ message: error, status: \"danger\" });\r\n//         }\r\n//       });\r\n//     }\r\n\r\n\r\n// });\r\n\r\n\r\n\r\n   \r\n"]}